//
// RouteResponsePath.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** A found path */
public class RouteResponsePath: JSONEncodable {
    /** The total distance of the route, in meter */
    public var distance: Double?
    /** The total time of the route, in ms */
    public var time: Int64?
    public var ascend: Double?
    /** The total descend (downhill) of the route, in meter */
    public var descend: Double?
    public var points: ResponseCoordinates?
    /** Is true if the points are encoded, if not paths[0].points contains the geo json of the path (then order is lon,lat,elevation), which is easier to handle but consumes more bandwidth compared to encoded version */
    public var pointsEncoded: Bool?
    /** The bounding box of the route, format &lt;br&gt; minLon, minLat, maxLon, maxLat */
    public var bbox: [Double]?
    public var snappedWaypoints: ResponseCoordinates?
    public var instructions: ResponseInstructions?
    public var details: AnyObject?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["distance"] = self.distance
        nillableDictionary["time"] = self.time?.encodeToJSON()
        nillableDictionary["ascend"] = self.ascend
        nillableDictionary["descend"] = self.descend
        nillableDictionary["points"] = self.points?.encodeToJSON()
        nillableDictionary["points_encoded"] = self.pointsEncoded
        nillableDictionary["bbox"] = self.bbox?.encodeToJSON()
        nillableDictionary["snapped_waypoints"] = self.snappedWaypoints?.encodeToJSON()
        nillableDictionary["instructions"] = self.instructions?.encodeToJSON()
        nillableDictionary["details"] = self.details
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
