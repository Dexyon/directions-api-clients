//
// GeocodingAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Alamofire



open class GeocodingAPI {
    /**
     Execute a Geocoding request
     
     - parameter key: (query) Get your key at graphhopper.com 
     - parameter q: (query) If you do forward geocoding, then this would be a textual description of the address you are looking for (optional)
     - parameter locale: (query) Display the search results for the specified locale. Currently French (fr), English (en), German (de) and Italian (it) are supported. If the locale wasn&#39;t found the default (en) is used. (optional)
     - parameter limit: (query) Specify the maximum number of returned results (optional)
     - parameter reverse: (query) Set to true to do a reverse Geocoding request, see point parameter (optional)
     - parameter point: (query) The location bias in the format &#39;latitude,longitude&#39; e.g. point&#x3D;45.93272,11.58803 (optional)
     - parameter provider: (query) Can be either, default, nominatim, opencagedata (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func geocodeGet(key: String, q: String? = nil, locale: String? = nil, limit: Int? = nil, reverse: Bool? = nil, point: String? = nil, provider: String? = nil, completion: @escaping ((_ data: GeocodingResponse?,_ error: Error?) -> Void)) {
        geocodeGetWithRequestBuilder(key: key, q: q, locale: locale, limit: limit, reverse: reverse, point: point, provider: provider).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Execute a Geocoding request
     - GET /geocode
     - This endpoint provides forward and reverse geocoding. For more details, review the official documentation at: https://graphhopper.com/api/1/docs/geocoding/ 
     - parameter key: (query) Get your key at graphhopper.com 
     - parameter q: (query) If you do forward geocoding, then this would be a textual description of the address you are looking for (optional)
     - parameter locale: (query) Display the search results for the specified locale. Currently French (fr), English (en), German (de) and Italian (it) are supported. If the locale wasn&#39;t found the default (en) is used. (optional)
     - parameter limit: (query) Specify the maximum number of returned results (optional)
     - parameter reverse: (query) Set to true to do a reverse Geocoding request, see point parameter (optional)
     - parameter point: (query) The location bias in the format &#39;latitude,longitude&#39; e.g. point&#x3D;45.93272,11.58803 (optional)
     - parameter provider: (query) Can be either, default, nominatim, opencagedata (optional)
     - returns: RequestBuilder<GeocodingResponse> 
     */
    open class func geocodeGetWithRequestBuilder(key: String, q: String? = nil, locale: String? = nil, limit: Int? = nil, reverse: Bool? = nil, point: String? = nil, provider: String? = nil) -> RequestBuilder<GeocodingResponse> {
        let path = "/geocode"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "q": q, 
            "locale": locale, 
            "limit": limit?.encodeToJSON(), 
            "reverse": reverse, 
            "point": point, 
            "provider": provider, 
            "key": key
        ])

        let requestBuilder: RequestBuilder<GeocodingResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
