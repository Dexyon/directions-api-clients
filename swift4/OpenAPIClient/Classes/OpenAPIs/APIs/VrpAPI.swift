//
// VrpAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Alamofire



open class VrpAPI {
    /**
     Solves vehicle routing problems
     
     - parameter key: (query) your API key 
     - parameter request: (body) Request object that contains the problem to be solved 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postVrp(key: String, request: Request, completion: @escaping ((_ data: JobId?,_ error: Error?) -> Void)) {
        postVrpWithRequestBuilder(key: key, request: request).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Solves vehicle routing problems
     - POST /vrp/optimize
     - This endpoint for solving vehicle routing problems, i.e. traveling salesman or vehicle routing problems, and returns the solution.
     - parameter key: (query) your API key 
     - parameter request: (body) Request object that contains the problem to be solved 
     - returns: RequestBuilder<JobId> 
     */
    open class func postVrpWithRequestBuilder(key: String, request: Request) -> RequestBuilder<JobId> {
        let path = "/vrp/optimize"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "key": key
        ])

        let requestBuilder: RequestBuilder<JobId>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
