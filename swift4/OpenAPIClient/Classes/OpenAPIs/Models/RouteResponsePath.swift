//
// RouteResponsePath.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


/** A found path */

public struct RouteResponsePath: Codable {

    /** The total distance of the route, in meter */
    public var distance: Double?
    /** The total time of the route, in ms */
    public var time: Int64?
    public var ascend: Double?
    /** The total descend (downhill) of the route, in meter */
    public var descend: Double?
    public var points: ResponseCoordinates?
    /** Is true if the points are encoded, if not paths[0].points contains the geo json of the path (then order is lon,lat,elevation), which is easier to handle but consumes more bandwidth compared to encoded version */
    public var pointsEncoded: Bool?
    /** The bounding box of the route, format &lt;br&gt; minLon, minLat, maxLon, maxLat */
    public var bbox: [Double]?
    public var snappedWaypoints: ResponseCoordinates?
    public var instructions: ResponseInstructions?
    public var details: Any?

    public init(distance: Double?, time: Int64?, ascend: Double?, descend: Double?, points: ResponseCoordinates?, pointsEncoded: Bool?, bbox: [Double]?, snappedWaypoints: ResponseCoordinates?, instructions: ResponseInstructions?, details: Any?) {
        self.distance = distance
        self.time = time
        self.ascend = ascend
        self.descend = descend
        self.points = points
        self.pointsEncoded = pointsEncoded
        self.bbox = bbox
        self.snappedWaypoints = snappedWaypoints
        self.instructions = instructions
        self.details = details
    }

    public enum CodingKeys: String, CodingKey { 
        case distance
        case time
        case ascend
        case descend
        case points
        case pointsEncoded = "points_encoded"
        case bbox
        case snappedWaypoints = "snapped_waypoints"
        case instructions
        case details
    }


}

