//
// ModelResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct ModelResponse: Codable {

    public enum Status: String, Codable {
        case waitingInQueue = "waiting_in_queue"
        case processing = "processing"
        case finished = "finished"
    }
    public var copyrights: [String]?
    /** unique identify of job - which you get when posting your request to the large problem solver */
    public var jobId: String?
    /** indicates the current status of the job */
    public var status: Status?
    /** waiting time in ms */
    public var waitingInQueue: Int64?
    /** processing time in ms. if job is still waiting in queue, processing_time is 0 */
    public var processingTime: Int64?
    public var solution: Solution?

    public init(copyrights: [String]?, jobId: String?, status: Status?, waitingInQueue: Int64?, processingTime: Int64?, solution: Solution?) {
        self.copyrights = copyrights
        self.jobId = jobId
        self.status = status
        self.waitingInQueue = waitingInQueue
        self.processingTime = processingTime
        self.solution = solution
    }

    public enum CodingKeys: String, CodingKey { 
        case copyrights
        case jobId = "job_id"
        case status
        case waitingInQueue = "waiting_in_queue"
        case processingTime = "processing_time"
        case solution
    }


}

