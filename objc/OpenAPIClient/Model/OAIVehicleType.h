#import <Foundation/Foundation.h>
#import "OAIObject.h"

/**
* GraphHopper Directions API
* You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic problems and supports various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API.
*
* OpenAPI spec version: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/





@protocol OAIVehicleType
@end

@interface OAIVehicleType : OAIObject

/* Unique identifier for the vehicle type [optional]
 */
@property(nonatomic) NSString* typeId;
/* Profile of vehicle type [optional]
 */
@property(nonatomic) NSString* profile;
/* array of capacity dimensions [optional]
 */
@property(nonatomic) NSArray<NSNumber*>* capacity;
/* speed_factor of vehicle type [optional]
 */
@property(nonatomic) NSNumber* speedFactor;
/* service time factor of vehicle type [optional]
 */
@property(nonatomic) NSNumber* serviceTimeFactor;
/* cost parameter per distance unit, here meter is used [optional]
 */
@property(nonatomic) NSNumber* costPerMeter;
/* cost parameter per time unit, here second is used [optional]
 */
@property(nonatomic) NSNumber* costPerSecond;
/* cost parameter vehicle activation, i.e. fixed costs per vehicle [optional]
 */
@property(nonatomic) NSNumber* costPerActivation;

@end
