#import <Foundation/Foundation.h>
#import "SWGJobId.h"
#import "SWGRequest.h"
#import "SWGResponse.h"
#import "SWGApi.h"

/**
* GraphHopper Directions API
* With the GraphHopper Directions API you get reliable and fast web services for routing and more with world wide coverage. We offer A-to-B routing via the Routing API optionally with turn instructions and elevation data as well as route optimization with various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API. 
*
* OpenAPI spec version: 1.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGRouteOptimizationApi: NSObject <SWGApi>

extern NSString* kSWGRouteOptimizationApiErrorDomain;
extern NSInteger kSWGRouteOptimizationApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Return the solution associated to the jobId
/// This endpoint returns the solution of a large problems. You can fetch it with the job_id, you have been sent. 
///
/// @param key your API key
/// @param jobId Request solution with jobId
/// 
///  code:200 message:"A response containing the solution",
///  code:400 message:"Error occurred on client side such as invalid input.",
///  code:500 message:"Error occurred on server side."
///
/// @return SWGResponse*
-(NSURLSessionTask*) getSolutionWithKey: (NSString*) key
    jobId: (NSString*) jobId
    completionHandler: (void (^)(SWGResponse* output, NSError* error)) handler;


/// Solves vehicle routing problems
/// This endpoint for solving vehicle routing problems, i.e. traveling salesman or vehicle routing problems, and returns the solution. 
///
/// @param key your API key
/// @param body Request object that contains the problem to be solved
/// 
///  code:200 message:"A jobId you can use to retrieve your solution from server - see solution endpoint.",
///  code:400 message:"Error occurred when reading client request. Request is invalid.",
///  code:500 message:"Error occurred on server side."
///
/// @return SWGJobId*
-(NSURLSessionTask*) postVrpWithKey: (NSString*) key
    body: (SWGRequest*) body
    completionHandler: (void (^)(SWGJobId* output, NSError* error)) handler;



@end
