#import <Foundation/Foundation.h>
#import "SWGGHError.h"
#import "SWGGHIsochroneResponse.h"
#import "SWGApi.h"

/**
* GraphHopper Directions API
* With the GraphHopper Directions API you get reliable and fast web services for routing and more with world wide coverage. We offer A-to-B routing via the Routing API optionally with turn instructions and elevation data as well as route optimization with various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API. 
*
* OpenAPI spec version: 1.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGIsochroneApi: NSObject <SWGApi>

extern NSString* kSWGIsochroneApiErrorDomain;
extern NSInteger kSWGIsochroneApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Isochrone Request
/// The GraphHopper Isochrone API allows calculating an isochrone of a locations means to calculate 'a line connecting points at which a vehicle arrives at the same time,' see [Wikipedia](http://en.wikipedia.org/wiki/Isochrone_map). It is also called **reachability** or **walkability**. 
///
/// @param point Specify the start coordinate
/// @param key Get your key at graphhopper.com
/// @param timeLimit Specify which time the vehicle should travel. In seconds. The maximum depends on the subscribed package. (optional) (default to 600)
/// @param vehicle Possible vehicles are bike, car, foot and [more](https://graphhopper.com/api/1/docs/supported-vehicle-profiles/) (optional) (default to car)
/// @param buckets For how many sub intervals an additional polygon should be calculated. (optional) (default to 1)
/// @param reverseFlow If &#x60;false&#x60; the flow goes from point to the polygon, if &#x60;true&#x60; the flow goes from the polygon \&quot;inside\&quot; to the point. Example usage for &#x60;false&#x60;&amp;#58; *How many potential customer can be reached within 30min travel time from your store* vs. &#x60;true&#x60;&amp;#58; *How many customers can reach your store within 30min travel time.* (optional) (default to false)
/// 
///  code:200 message:"Isochrone Result",
///  code:0 message:"Unexpected Error"
///
/// @return SWGGHIsochroneResponse*
-(NSURLSessionTask*) isochroneGetWithPoint: (NSString*) point
    key: (NSString*) key
    timeLimit: (NSNumber*) timeLimit
    vehicle: (NSString*) vehicle
    buckets: (NSNumber*) buckets
    reverseFlow: (NSNumber*) reverseFlow
    completionHandler: (void (^)(SWGGHIsochroneResponse* output, NSError* error)) handler;



@end
