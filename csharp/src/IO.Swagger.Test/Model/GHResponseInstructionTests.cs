/* 
 * GraphHopper Directions API
 *
 * With the GraphHopper Directions API you get reliable and fast web services for routing and more with world wide coverage. We offer A-to-B routing via the Routing API optionally with turn instructions and elevation data as well as route optimization with various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API. 
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing GHResponseInstruction
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class GHResponseInstructionTests
    {
        // TODO uncomment below to declare an instance variable for GHResponseInstruction
        //private GHResponseInstruction instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of GHResponseInstruction
            //instance = new GHResponseInstruction();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of GHResponseInstruction
        /// </summary>
        [Test]
        public void GHResponseInstructionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" GHResponseInstruction
            //Assert.IsInstanceOfType<GHResponseInstruction> (instance, "variable 'instance' is a GHResponseInstruction");
        }

        /// <summary>
        /// Test the property 'Text'
        /// </summary>
        [Test]
        public void TextTest()
        {
            // TODO unit test for the property 'Text'
        }
        /// <summary>
        /// Test the property 'Distance'
        /// </summary>
        [Test]
        public void DistanceTest()
        {
            // TODO unit test for the property 'Distance'
        }
        /// <summary>
        /// Test the property 'Time'
        /// </summary>
        [Test]
        public void TimeTest()
        {
            // TODO unit test for the property 'Time'
        }
        /// <summary>
        /// Test the property 'Interval'
        /// </summary>
        [Test]
        public void IntervalTest()
        {
            // TODO unit test for the property 'Interval'
        }
        /// <summary>
        /// Test the property 'Sign'
        /// </summary>
        [Test]
        public void SignTest()
        {
            // TODO unit test for the property 'Sign'
        }
        /// <summary>
        /// Test the property 'AnnotationText'
        /// </summary>
        [Test]
        public void AnnotationTextTest()
        {
            // TODO unit test for the property 'AnnotationText'
        }
        /// <summary>
        /// Test the property 'AnnotationImportance'
        /// </summary>
        [Test]
        public void AnnotationImportanceTest()
        {
            // TODO unit test for the property 'AnnotationImportance'
        }
        /// <summary>
        /// Test the property 'ExitNumber'
        /// </summary>
        [Test]
        public void ExitNumberTest()
        {
            // TODO unit test for the property 'ExitNumber'
        }
        /// <summary>
        /// Test the property 'TurnAngle'
        /// </summary>
        [Test]
        public void TurnAngleTest()
        {
            // TODO unit test for the property 'TurnAngle'
        }

    }

}
