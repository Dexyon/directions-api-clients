/* 
 * GraphHopper Directions API
 *
 * You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic problems and supports various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing GeocodingLocation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class GeocodingLocationTests
    {
        // TODO uncomment below to declare an instance variable for GeocodingLocation
        //private GeocodingLocation instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of GeocodingLocation
            //instance = new GeocodingLocation();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of GeocodingLocation
        /// </summary>
        [Test]
        public void GeocodingLocationInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" GeocodingLocation
            //Assert.IsInstanceOfType<GeocodingLocation> (instance, "variable 'instance' is a GeocodingLocation");
        }

        /// <summary>
        /// Test the property 'Point'
        /// </summary>
        [Test]
        public void PointTest()
        {
            // TODO unit test for the property 'Point'
        }
        /// <summary>
        /// Test the property 'OsmId'
        /// </summary>
        [Test]
        public void OsmIdTest()
        {
            // TODO unit test for the property 'OsmId'
        }
        /// <summary>
        /// Test the property 'OsmType'
        /// </summary>
        [Test]
        public void OsmTypeTest()
        {
            // TODO unit test for the property 'OsmType'
        }
        /// <summary>
        /// Test the property 'OsmKey'
        /// </summary>
        [Test]
        public void OsmKeyTest()
        {
            // TODO unit test for the property 'OsmKey'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Country'
        /// </summary>
        [Test]
        public void CountryTest()
        {
            // TODO unit test for the property 'Country'
        }
        /// <summary>
        /// Test the property 'City'
        /// </summary>
        [Test]
        public void CityTest()
        {
            // TODO unit test for the property 'City'
        }
        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Test]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }
        /// <summary>
        /// Test the property 'Street'
        /// </summary>
        [Test]
        public void StreetTest()
        {
            // TODO unit test for the property 'Street'
        }
        /// <summary>
        /// Test the property 'Housenumber'
        /// </summary>
        [Test]
        public void HousenumberTest()
        {
            // TODO unit test for the property 'Housenumber'
        }
        /// <summary>
        /// Test the property 'Postcode'
        /// </summary>
        [Test]
        public void PostcodeTest()
        {
            // TODO unit test for the property 'Postcode'
        }

    }

}
