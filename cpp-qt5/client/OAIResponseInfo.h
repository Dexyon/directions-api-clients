/**
 * GraphHopper Directions API
 * You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic problems and supports various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseInfo.h
 *
 * Additional information for your request
 */

#ifndef OAIResponseInfo_H_
#define OAIResponseInfo_H_

#include <QJsonObject>


#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIResponseInfo: public OAIObject {
public:
    OAIResponseInfo();
    OAIResponseInfo(QString json);
    ~OAIResponseInfo();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIResponseInfo* fromJson(QString jsonString) override;

    QList<QString*>* getCopyrights();
    void setCopyrights(QList<QString*>* copyrights);

    double getTook();
    void setTook(double took);


    virtual bool isSet() override;

private:
    QList<QString*>* copyrights;
    bool m_copyrights_isSet;

    double took;
    bool m_took_isSet;

};

}

#endif /* OAIResponseInfo_H_ */
