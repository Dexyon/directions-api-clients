/**
 * GraphHopper Directions API
 * You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic problems and supports various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShipment.h
 *
 * 
 */

#ifndef OAIShipment_H_
#define OAIShipment_H_

#include <QJsonObject>


#include "OAIOAIStop.h"
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIShipment: public OAIObject {
public:
    OAIShipment();
    OAIShipment(QString json);
    ~OAIShipment();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIShipment* fromJson(QString jsonString) override;

    QString* getId();
    void setId(QString* id);

    QString* getName();
    void setName(QString* name);

    qint32 getPriority();
    void setPriority(qint32 priority);

    OAIStop* getPickup();
    void setPickup(OAIStop* pickup);

    OAIStop* getDelivery();
    void setDelivery(OAIStop* delivery);

    QList<qint32>* getSize();
    void setSize(QList<qint32>* size);

    QList<QString*>* getRequiredSkills();
    void setRequiredSkills(QList<QString*>* required_skills);

    QList<QString*>* getAllowedVehicles();
    void setAllowedVehicles(QList<QString*>* allowed_vehicles);

    QList<QString*>* getDisallowedVehicles();
    void setDisallowedVehicles(QList<QString*>* disallowed_vehicles);

    qint64 getMaxTimeInVehicle();
    void setMaxTimeInVehicle(qint64 max_time_in_vehicle);


    virtual bool isSet() override;

private:
    QString* id;
    bool m_id_isSet;

    QString* name;
    bool m_name_isSet;

    qint32 priority;
    bool m_priority_isSet;

    OAIStop* pickup;
    bool m_pickup_isSet;

    OAIStop* delivery;
    bool m_delivery_isSet;

    QList<qint32>* size;
    bool m_size_isSet;

    QList<QString*>* required_skills;
    bool m_required_skills_isSet;

    QList<QString*>* allowed_vehicles;
    bool m_allowed_vehicles_isSet;

    QList<QString*>* disallowed_vehicles;
    bool m_disallowed_vehicles_isSet;

    qint64 max_time_in_vehicle;
    bool m_max_time_in_vehicle_isSet;

};

}

#endif /* OAIShipment_H_ */
