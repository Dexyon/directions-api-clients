/**
 * GraphHopper Directions API
 * You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic problems and supports various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef _OAI_OBJECT_H_
#define _OAI_OBJECT_H_

#include <QJsonObject>
#include <QJsonDocument>

namespace OpenAPI {

class OAIObject {
  public:
    virtual QJsonObject asJsonObject() {
        if(jObj != nullptr){
            return *jObj;
        }
        return QJsonObject();
    }

    OAIObject() {
        jObj = nullptr;
    }

    virtual ~OAIObject() {
        if(jObj != nullptr){
            delete jObj;
        }
    }

    virtual OAIObject* fromJson(QString jsonString) {
        QJsonDocument doc = QJsonDocument::fromJson(jsonString.toUtf8());
        auto ret = new OAIObject();
        ret->fromJsonObject(doc.object());
        return ret;
    }

    virtual void fromJsonObject(QJsonObject json) {
        if(jObj != nullptr)
        {
            delete jObj;
        }
        jObj = new QJsonObject(json);
    }

    virtual QString asJson() {
        if(jObj != nullptr)
        {
            QJsonDocument doc(*jObj);
            return doc.toJson(QJsonDocument::Compact);
        }
        return QString();
    }

    virtual bool isSet() {
        return false;
    }
private :
   QJsonObject *jObj;
};

}

#endif /* _OAI_OBJECT_H_ */
