/**
 * GraphHopper Directions API
 * You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic problems and supports various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddress.h
 *
 * 
 */

#ifndef OAIAddress_H_
#define OAIAddress_H_

#include <QJsonObject>


#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIAddress: public OAIObject {
public:
    OAIAddress();
    OAIAddress(QString json);
    ~OAIAddress();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIAddress* fromJson(QString jsonString) override;

    QString* getLocationId();
    void setLocationId(QString* location_id);

    QString* getName();
    void setName(QString* name);

    double getLon();
    void setLon(double lon);

    double getLat();
    void setLat(double lat);

    QString* getStreetHint();
    void setStreetHint(QString* street_hint);


    virtual bool isSet() override;

private:
    QString* location_id;
    bool m_location_id_isSet;

    QString* name;
    bool m_name_isSet;

    double lon;
    bool m_lon_isSet;

    double lat;
    bool m_lat_isSet;

    QString* street_hint;
    bool m_street_hint_isSet;

};

}

#endif /* OAIAddress_H_ */
