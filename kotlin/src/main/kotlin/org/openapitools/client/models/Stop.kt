/**
* GraphHopper Directions API
* You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic problems and supports various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API.
*
* OpenAPI spec version: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.Address
import org.openapitools.client.models.TimeWindow

/**
 * 
 * @param address 
 * @param duration duration of stop, i.e. time in seconds the corresponding activity takes
 * @param preparation_time preparation time of service, e.g. search for a parking space. it only falls due if the location of previous activity differs from this location
 * @param time_windows array of time windows. currently, only a single time window is allowed
 */
data class Stop (
    val address: Address? = null,
    /* duration of stop, i.e. time in seconds the corresponding activity takes */
    val duration: kotlin.Long? = null,
    /* preparation time of service, e.g. search for a parking space. it only falls due if the location of previous activity differs from this location */
    val preparation_time: kotlin.Long? = null,
    /* array of time windows. currently, only a single time window is allowed */
    val time_windows: kotlin.Array<TimeWindow>? = null
) {

}

