/**
* GraphHopper Directions API
* You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic problems and supports various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API.
*
* OpenAPI spec version: 1.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models

import io.swagger.client.models.Address
import io.swagger.client.models.Break

/**
 * 
 * @param vehicle_id Unique identifier of vehicle
 * @param type_id Unique identifier referring to the available vehicle types
 * @param start_address 
 * @param end_address 
 * @param &#x60;break&#x60; 
 * @param return_to_depot Indicates whether vehicle should return to start address or not. If not, it can end at any service activity.
 * @param earliest_start earliest start of vehicle at its start location
 * @param latest_end latest end of vehicle at its end location
 * @param skills array of skills
 * @param max_distance max distance of vehicle
 */
data class Vehicle (
    /* Unique identifier of vehicle */
    val vehicle_id: kotlin.String? = null,
    /* Unique identifier referring to the available vehicle types */
    val type_id: kotlin.String? = null,
    val start_address: Address? = null,
    val end_address: Address? = null,
    val `break`: Break? = null,
    /* Indicates whether vehicle should return to start address or not. If not, it can end at any service activity. */
    val return_to_depot: kotlin.Boolean? = null,
    /* earliest start of vehicle at its start location */
    val earliest_start: kotlin.Long? = null,
    /* latest end of vehicle at its end location */
    val latest_end: kotlin.Long? = null,
    /* array of skills */
    val skills: kotlin.Array<kotlin.String>? = null,
    /* max distance of vehicle */
    val max_distance: kotlin.Long? = null
) {

}

