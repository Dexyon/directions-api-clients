/**
* GraphHopper Directions API
* You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic problems and supports various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API.
*
* OpenAPI spec version: 1.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models

import io.swagger.client.models.Activity
import io.swagger.client.models.RoutePoint

/**
 * 
 * @param vehicle_id id of vehicle that operates route
 * @param distance distance of route in meter
 * @param transport_time transport time of route in ms
 * @param completion_time completion time of route in ms
 * @param waiting_time waiting time of route in ms
 * @param activities array of activities
 * @param points array of route planning points
 */
data class Route (
    /* id of vehicle that operates route */
    val vehicle_id: kotlin.String? = null,
    /* distance of route in meter */
    val distance: kotlin.Long? = null,
    /* transport time of route in ms */
    val transport_time: kotlin.Long? = null,
    /* completion time of route in ms */
    val completion_time: kotlin.Long? = null,
    /* waiting time of route in ms */
    val waiting_time: kotlin.Long? = null,
    /* array of activities */
    val activities: kotlin.Array<Activity>? = null,
    /* array of route planning points */
    val points: kotlin.Array<RoutePoint>? = null
) {

}

