/**
* GraphHopper Directions API
* You use the GraphHopper Directions API to add route planning, navigation and route optimization to your software. E.g. the Routing API has turn instructions and elevation data and the Route Optimization API solves your logistic problems and supports various constraints like time window and capacity restrictions. Also it is possible to get all distances between all locations with our fast Matrix API.
*
* OpenAPI spec version: 1.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models


/**
 * 
 * @param location_id Unique identifier of location
 * @param name name of location, e.g. street name plus house number
 * @param lon longitude
 * @param lat latitude
 * @param street_hint Optional parameter. Specifies a hint for each address to better snap the coordinates (lon,lat) to road network. E.g. if there is an address or house with two or more neighboring streets you can control for which street the closest location is looked up.
 */
data class Address (
    /* Unique identifier of location */
    val location_id: kotlin.String? = null,
    /* name of location, e.g. street name plus house number */
    val name: kotlin.String? = null,
    /* longitude */
    val lon: kotlin.Double? = null,
    /* latitude */
    val lat: kotlin.Double? = null,
    /* Optional parameter. Specifies a hint for each address to better snap the coordinates (lon,lat) to road network. E.g. if there is an address or house with two or more neighboring streets you can control for which street the closest location is looked up. */
    val street_hint: kotlin.String? = null
) {

}

